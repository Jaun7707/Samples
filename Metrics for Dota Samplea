{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red100\green56\blue32;\red196\green26\blue22;
\red92\green38\blue153;\red170\green13\blue145;\red28\green0\blue207;\red63\green110\blue116;\red46\green13\blue110;
\red38\green71\blue75;}
\margl1440\margr1440\vieww28600\viewh16520\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 //\cf0 \
\cf2 //  SecondViewController.m\cf0 \
\cf2 //  Dota Stats\cf0 \
\cf2 //\cf0 \
\cf2 //  Created by Joey Hoffmann on 3/4/13.\cf0 \
\cf2 //  Copyright (c) 2013 Joey Hoffmann. All rights reserved.\cf0 \
\cf2 //\cf0 \
\
\pard\tx529\pardeftab529\pardirnatural
\cf3 #import \cf4 "SecondViewController.h"\cf3 \
#import \cf4 "SaveData.h"\cf3 \
#import \cf4 <QuartzCore/QuartzCore.h>\cf3 \
\pard\tx529\pardeftab529\pardirnatural
\cf0 \
\cf2 //Steam User Connection Variables\cf0 \
\pard\tx529\pardeftab529\pardirnatural
\cf5 NSURLConnection\cf0  *steamUserConnection;\
\cf5 NSMutableData\cf0  *steamUserData;\
\cf5 NSString\cf0  *steamUserString;\
\pard\tx529\pardeftab529\pardirnatural
\cf2 //For the match IDs\cf0 \
\pard\tx529\pardeftab529\pardirnatural
\cf5 NSMutableData\cf0  *matchHistoryData;\
\cf5 NSMutableArray\cf0  *everyMatchEverPlayed;\
\cf5 NSURLConnection\cf0  *connectionMatchHistory;\
\cf5 NSString\cf0  *gameHistory;\
\cf6 long\cf0  \cf6 long\cf0  \cf6 int\cf0  steamUserAccountIDLocal = \cf7 0\cf0 ;\
\pard\tx529\pardeftab529\pardirnatural
\cf2 //Hero Data Connection Variables\cf0 \
\pard\tx529\pardeftab529\pardirnatural
\cf5 NSURLConnection\cf0  *heroNameConnection;\
\cf5 NSMutableData\cf0  *heroNameData;\
\pard\tx529\pardeftab529\pardirnatural
\cf2 //Other\cf0 \
\pard\tx529\pardeftab529\pardirnatural
\cf5 UIProgressView\cf0  *loadingProgress;\
\cf6 int\cf0  lastMatchID = \cf7 0\cf0 ;\
\cf6 int\cf0  accountIDInt;\
\cf6 float\cf0  totalWin;\
\cf6 float\cf0  totalLoss;\
\cf6 bool\cf0  isiPhone5;\
\cf6 int\cf0  cardOneY;\
\cf6 int\cf0  cardTwoY;\
\cf6 bool\cf0  collecting = \cf6 false\cf0 ;\
\cf6 bool\cf0  goSearch = \cf6 false\cf0 ;\
\
\cf6 @interface\cf0  \cf8 SecondViewController\cf0  ()\
\
\cf6 @end\cf0 \
\
\cf6 @implementation\cf0  SecondViewController\
\
- (\cf6 BOOL\cf0 ) connectedToInternet\
\{\
    \cf5 NSString\cf0  *URLString = [\cf5 NSString\cf0  \cf9 stringWithContentsOfURL\cf0 :[\cf5 NSURL\cf0  \cf9 URLWithString\cf0 :\cf4 @"https://api.steampowered.com/IDOTA2Match_570/GetMatchDetails/V001/?key=D96F2969101F6440AD128D3E1F93EA91&match_id=89014061"\cf0 ]];\
    \cf6 return\cf0  ( URLString != \cf6 NULL\cf0  ) ? \cf6 YES\cf0  : \cf6 NO\cf0 ;\
\}\
\
- (\cf5 NSInteger\cf0 )supportedInterfaceOrientations\
\{\
    \cf6 return\cf0  \cf9 UIInterfaceOrientationMaskPortrait\cf0 ;\
\}\
\
- (\cf5 UIInterfaceOrientation\cf0 )preferredInterfaceOrientationForPresentation\
\{\
    \cf6 return\cf0  \cf9 UIInterfaceOrientationPortrait\cf0 ;\
\}\
\
- (\cf6 void\cf0 )collectMatches\
\{\
    \cf5 NSURLRequest\cf0  *request = [\cf5 NSURLRequest\cf0  \cf9 requestWithURL\cf0 :[\cf5 NSURL\cf0  \cf9 URLWithString\cf0 :\cf8 gameHistory\cf0 ]\
                                             \cf9 cachePolicy\cf0 :\cf9 NSURLRequestUseProtocolCachePolicy\cf0 \
                                         \cf9 timeoutInterval\cf0 :\cf7 6000.0\cf0 ];\
    \cf8 connectionMatchHistory\cf0 =[[\cf5 NSURLConnection\cf0  \cf9 alloc\cf0 ] \cf9 initWithRequest\cf0 :request \cf9 delegate\cf0 :\cf6 self\cf0 ];\
    \
    \cf6 if\cf0  (\cf8 connectionMatchHistory\cf0 ) \{\
        \cf8 matchHistoryData\cf0  = [[\cf5 NSMutableData\cf0  \cf9 data\cf0 ] \cf9 retain\cf0 ];\
    \}\
\}\
\
- (\cf6 void\cf0 )webViewDidFinishLoad:(\cf5 UIWebView\cf0  *)webView\
\{\
    \cf5 NSString\cf0  *currentURLString = [\cf8 _webView\cf0 .\cf5 request\cf0 .\cf9 URL\cf0  \cf9 absoluteString\cf0 ];\
    \cf5 NSString\cf0  *question;\
    \cf6 if\cf0 ([currentURLString \cf9 rangeOfString\cf0 :\cf4 @"id"\cf0 ].\cf5 location\cf0  != \cf9 NSNotFound\cf0 ) \{\
        \cf2 //Reset data\cf0 \
        \cf5 NSString\cf0  *appDomain = [[\cf5 NSBundle\cf0  \cf9 mainBundle\cf0 ] \cf9 bundleIdentifier\cf0 ];\
        [[\cf5 NSUserDefaults\cf0  \cf9 standardUserDefaults\cf0 ] \cf9 removePersistentDomainForName\cf0 :appDomain];\
        \cf8 totalWinsSave\cf0  = [\cf5 NSUserDefaults\cf0  \cf9 standardUserDefaults\cf0 ];\
        \cf2 //Get ID\cf0 \
        \cf5 NSString\cf0  *idString = [[[[currentURLString \cf9 componentsSeparatedByString\cf0 :\cf4 @"id/"\cf0 ] \cf9 objectAtIndex\cf0 :\cf7 1\cf0 ] \cf9 componentsSeparatedByString\cf0 :\cf4 @"/"\cf0 ] \cf9 objectAtIndex\cf0 :\cf7 0\cf0 ];\
        \
        \cf5 NSString\cf0  *request = [\cf5 NSString\cf0  \cf9 stringWithFormat\cf0 :\cf4 @"http://api.steampowered.com/ISteamUser/ResolveVanityURL/v0001/?key=D96F2969101F6440AD128D3E1F93EA91&vanityurl=%@"\cf0 ,  idString];\
        \
        \cf5 NSString\cf0  *escapedUrl = [request\
                                \cf9 stringByAddingPercentEscapesUsingEncoding\cf0 :\cf9 NSUTF8StringEncoding\cf0 ];\
        \
        \cf5 NSURL\cf0  *URL = [\cf5 NSURL\cf0  \cf9 URLWithString\cf0 :escapedUrl];\
        \
        \cf5 NSError\cf0  *error;\
        \cf5 NSString\cf0  *HTML = [\cf5 NSString\cf0  \cf9 stringWithContentsOfURL\cf0 :URL \cf9 encoding\cf0 :\cf9 NSASCIIStringEncoding\cf0  \cf9 error\cf0 :&error];\
        question = [[[[HTML \cf9 componentsSeparatedByString\cf0 :\cf4 @"steamid\\": \\""\cf0 ] \cf9 objectAtIndex\cf0 :\cf7 1\cf0 ] \cf9 componentsSeparatedByString\cf0 :\cf4 @"\\","\cf0 ] \cf9 objectAtIndex\cf0 :\cf7 0\cf0 ];\
        \cf8 goSearch\cf0  = \cf6 true\cf0 ;\
        [\cf5 UIView\cf0  \cf9 animateWithDuration\cf0 :\cf7 0.35\cf0 \
                              \cf9 delay\cf0 :\cf7 0.0\cf0 \
                            \cf9 options\cf0 : \cf9 UIViewAnimationCurveEaseInOut\cf0 \
                         \cf9 animations\cf0 :^\{\
                             [\cf8 _webView\cf0  \cf9 setCenter\cf0 :\cf9 CGPointMake\cf0 (\cf8 _webView\cf0 .\cf5 center\cf0 .\cf5 x\cf0 , \cf8 _webView\cf0 .\cf5 center\cf0 .\cf5 y\cf0 +\cf7 550\cf0 )];\
                         \}\
                         \cf9 completion\cf0 :^(\cf6 BOOL\cf0  finished)\{\
                         \}];\
    \}\
    \cf6 else\cf0  \cf6 if\cf0 ([currentURLString \cf9 rangeOfString\cf0 :\cf4 @"profiles"\cf0 ].\cf5 location\cf0  != \cf9 NSNotFound\cf0 ) \{\
        question = [[[[currentURLString \cf9 componentsSeparatedByString\cf0 :\cf4 @"profiles/"\cf0 ] \cf9 objectAtIndex\cf0 :\cf7 1\cf0 ] \cf9 componentsSeparatedByString\cf0 :\cf4 @"/"\cf0 ] \cf9 objectAtIndex\cf0 :\cf7 0\cf0 ];\
        \cf8 goSearch\cf0  = \cf6 true\cf0 ;\
        [\cf5 UIView\cf0  \cf9 animateWithDuration\cf0 :\cf7 0.35\cf0 \
                              \cf9 delay\cf0 :\cf7 0.0\cf0 \
                            \cf9 options\cf0 : \cf9 UIViewAnimationCurveEaseInOut\cf0 \
                         \cf9 animations\cf0 :^\{\
                             [\cf8 _webView\cf0  \cf9 setCenter\cf0 :\cf9 CGPointMake\cf0 (\cf8 _webView\cf0 .\cf5 center\cf0 .\cf5 x\cf0 , \cf8 _webView\cf0 .\cf5 center\cf0 .\cf5 y\cf0 +\cf7 550\cf0 )];\
                         \}\
                         \cf9 completion\cf0 :^(\cf6 BOOL\cf0  finished)\{\
                         \}];\
    \}\
    \cf6 if\cf0 (\cf8 goSearch\cf0 ) \{\
        \cf8 steamUserAccountIDLocal\cf0  = [question \cf9 longLongValue\cf0 ];\
        [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :question \cf9 forKey\cf0 :\cf4 @"steamUserAccountID"\cf0 ];\
        \cf8 everyMatchEverPlayed\cf0  = [[\cf5 NSMutableArray\cf0  \cf9 alloc\cf0 ] \cf9 init\cf0 ];\
        [\cf8 everyMatchEverPlayed\cf0  \cf9 removeAllObjects\cf0 ];\
        [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf8 everyMatchEverPlayed\cf0  \cf9 forKey\cf0 :\cf4 @"everyMatchEverPlayed"\cf0 ];\
        \
        \cf5 NSString\cf0  *accountID =  [\cf5 NSString\cf0  \cf9 stringWithFormat\cf0 :\cf4 @"%i"\cf0 , (\cf6 int\cf0 )\cf8 steamUserAccountIDLocal\cf0 ];\
        \cf8 accountIDInt\cf0  = [accountID \cf9 integerValue\cf0 ];\
        \cf5 NSDate\cf0  *date = [\cf5 NSDate\cf0  \cf9 date\cf0 ];\
        \cf5 NSTimeInterval\cf0  currentDate = [date \cf9 timeIntervalSince1970\cf0 ];\
        \cf6 long\cf0  \cf6 long\cf0  \cf6 int\cf0  currendDateInt = currentDate;\
        \
        \cf2 //Set up first connection\cf0 \
        \cf8 gameHistory\cf0  = [\cf5 NSString\cf0  \cf9 stringWithFormat\cf0 :\cf4 @"https://api.steampowered.com/IDOTA2Match_570/GetMatchHistory/V001/?key=D96F2969101F6440AD128D3E1F93EA91&account_id=%@&date_max=%i"\cf0 , accountID, currendDateInt];\
        \
        \cf2 //Hero Name Connection\cf0 \
        \cf5 NSURLRequest\cf0  *requestHeroNames = [\cf5 NSURLRequest\cf0  \cf9 requestWithURL\cf0 :[\cf5 NSURL\cf0  \cf9 URLWithString\cf0 :\cf4 @"https://api.steampowered.com/IEconDota2_570/GetHeroes/V001/?key=D96F2969101F6440AD128D3E1F93EA91&language=english"\cf0 ]\
                                                          \cf9 cachePolicy\cf0 :\cf9 NSURLRequestUseProtocolCachePolicy\cf0 \
                                                      \cf9 timeoutInterval\cf0 :\cf7 60.0\cf0 ];\
        \cf8 heroNameConnection\cf0  = [[\cf5 NSURLConnection\cf0  \cf9 alloc\cf0 ] \cf9 initWithRequest\cf0 :requestHeroNames \cf9 delegate\cf0 :\cf6 self\cf0 ];\
        \cf6 if\cf0  (\cf8 heroNameConnection\cf0 ) \{\
            \cf8 heroNameData\cf0  = [[\cf5 NSMutableData\cf0  \cf9 data\cf0 ] \cf9 retain\cf0 ];\
        \}\
        \
        \cf2 //Steam User Connection\cf0 \
        \cf8 steamUserString\cf0  = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"http://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002/?key=D96F2969101F6440AD128D3E1F93EA91&steamids=%lli"\cf0 , \cf8 steamUserAccountIDLocal\cf0 ];\
        \cf5 NSURLRequest\cf0  *requestingUserData=[\cf5 NSURLRequest\cf0  \cf9 requestWithURL\cf0 :[\cf5 NSURL\cf0  \cf9 URLWithString\cf0 :\cf8 steamUserString\cf0 ]\
                                                          \cf9 cachePolicy\cf0 :\cf9 NSURLRequestUseProtocolCachePolicy\cf0 \
                                                      \cf9 timeoutInterval\cf0 :\cf7 60.0\cf0 ];\
        \cf8 steamUserConnection\cf0  = [[\cf5 NSURLConnection\cf0  \cf9 alloc\cf0 ] \cf9 initWithRequest\cf0 :requestingUserData \cf9 delegate\cf0 :\cf6 self\cf0 ];\
        \cf6 if\cf0  (\cf8 steamUserConnection\cf0 ) \{\
            \cf8 steamUserData\cf0  = [[\cf5 NSMutableData\cf0  \cf9 data\cf0 ] \cf9 retain\cf0 ];\
        \}\
        \
        \cf2 //Call connection\cf0 \
        [\cf6 self\cf0  \cf10 collectMatches\cf0 ];\
        \
        \cf8 collecting\cf0  = \cf6 true\cf0 ;\
        \
        \cf2 //Animate\cf0 \
        \cf8 loadingProgress\cf0  = [[\cf5 UIProgressView\cf0  \cf9 alloc\cf0 ] \cf9 initWithFrame\cf0 :\cf9 CGRectMake\cf0 (\cf7 0\cf0 , \cf7 64\cf0 , \cf7 320\cf0 , \cf7 10\cf0 )];\
        [\cf6 self\cf0 .\cf5 view\cf0  \cf9 addSubview\cf0 :\cf8 loadingProgress\cf0 ];\
        \cf8 loadingProgress\cf0 .\cf5 progress\cf0  = \cf7 0\cf0 ;\
    \}\
\}\
\
- (\cf6 IBAction\cf0 )toMenu:(\cf6 id\cf0 )sender \{\
    \cf6 if\cf0 (!\cf8 collecting\cf0 )\
        [\cf6 self\cf0  \cf9 dismissViewControllerAnimated\cf0 :\cf6 YES\cf0  \cf9 completion\cf0 :\cf6 nil\cf0 ];\
    \cf6 else\cf0  \{\
        \cf5 UIAlertView\cf0  *alert = [[\cf5 UIAlertView\cf0  \cf9 alloc\cf0 ] \cf9 initWithTitle\cf0 :\cf4 @"Slow Down!"\cf0  \cf9 message\cf0 :\cf4 @"Dota Metrics is collecting player data. Please wait until the process is completed."\cf0  \cf9 delegate\cf0 :\cf6 self\cf0  \cf9 cancelButtonTitle\cf0 :\cf4 @"OK"\cf0  \cf9 otherButtonTitles\cf0 :\cf6 nil\cf0 , \cf6 nil\cf0 ];\
        [alert \cf9 show\cf0 ];\
    \}\
\}\
\
- (\cf6 void\cf0 )viewDidLoad\
\{\
    \cf2 //Load login page\cf0 \
    [\cf8 _webView\cf0  \cf9 setDelegate\cf0 :\cf6 self\cf0 ];\
    \cf5 NSString\cf0  *steamString = \cf4 @"https://steamcommunity.com/login/home/?goto=0"\cf0 ;\
    \cf5 NSURL\cf0  *steamURL = [\cf5 NSURL\cf0  \cf9 URLWithString\cf0 :steamString];\
    \cf5 NSURLRequest\cf0  *steamRequest = [\cf5 NSURLRequest\cf0  \cf9 requestWithURL\cf0 :steamURL];\
    [\cf8 _webView\cf0  \cf9 loadRequest\cf0 :steamRequest];\
    \
    \cf2 //Initial setup\cf0 \
    \cf8 collecting\cf0  = \cf6 false\cf0 ;\
    \cf8 goSearch\cf0  = \cf6 false\cf0 ;\
    [\cf6 super\cf0  \cf9 viewDidLoad\cf0 ];\
    \cf8 totalWin\cf0  = \cf7 0\cf0 ;\
    \cf8 totalLoss\cf0  = \cf7 0\cf0 ;\
    \cf8 totalWinsSave\cf0  = [\cf5 NSUserDefaults\cf0  \cf9 standardUserDefaults\cf0 ];\
    \cf8 isiPhone5\cf0  = \cf3 CGSizeEqualToSize\cf0 ([[\cf5 UIScreen\cf0  \cf9 mainScreen\cf0 ] \cf9 preferredMode\cf0 ].\cf5 size\cf0 ,\cf9 CGSizeMake\cf0 (\cf7 640\cf0 , \cf7 1136\cf0 ));\
    \cf6 if\cf0 (!\cf8 isiPhone5\cf0 ) \{\
        \cf8 cardOneY\cf0  = \cf7 169\cf0 ;\
        \cf8 cardTwoY\cf0  = \cf7 364\cf0 ;\
    \}\
    \cf6 else\cf0  \{\
        \cf8 cardOneY\cf0  = \cf7 210\cf0 ;\
        \cf8 cardTwoY\cf0  = \cf7 410\cf0 ;\
    \}\
\}\
- (\cf6 void\cf0 )viewDidAppear:(\cf6 BOOL\cf0 )animated\
\{\
    \cf6 if\cf0 (![\cf6 self\cf0  \cf10 connectedToInternet\cf0 ]) \{\
        \cf5 UIAlertView\cf0  *alert = [[\cf5 UIAlertView\cf0  \cf9 alloc\cf0 ] \cf9 initWithTitle\cf0 :\cf4 @"Network Communication Issue"\cf0  \cf9 message\cf0 :\cf4 @"An active internet connection is required to download player information."\cf0  \cf9 delegate\cf0 :\cf6 self\cf0  \cf9 cancelButtonTitle\cf0 :\cf4 @"OK"\cf0  \cf9 otherButtonTitles\cf0 :\cf6 nil\cf0 , \cf6 nil\cf0 ];\
        [alert \cf9 show\cf0 ];\
    \}\
\
\}\
- (\cf6 void\cf0 )connection:(\cf5 NSURLConnection\cf0  *)connection didReceiveData:(\cf5 NSData\cf0  *)data\
\{\
    \cf6 if\cf0 ([connection \cf9 isEqual\cf0 :\cf8 steamUserConnection\cf0 ]) \{\
        [\cf8 steamUserData\cf0  \cf9 appendData\cf0 :data];\
        \cf5 NSDictionary\cf0  *playerInfoDic = [\cf5 NSJSONSerialization\cf0  \cf9 JSONObjectWithData\cf0 :\cf8 steamUserData\cf0  \cf9 options\cf0 :\cf9 NSJSONReadingMutableLeaves\cf0  \cf9 error\cf0 :\cf6 nil\cf0 ];\
        \cf6 @try\cf0  \{\
            \cf5 NSArray\cf0  *stuffInPlayerDic = [playerInfoDic \cf9 objectForKey\cf0 :\cf4 @"response"\cf0 ];\
            \cf5 NSDictionary\cf0  *players = [[stuffInPlayerDic \cf9 objectForKey\cf0 :\cf4 @"players"\cf0 ] \cf9 objectAtIndex\cf0 :\cf7 0\cf0 ];\
        \
            \cf2 //Setting retreived information to object types\cf0 \
            \cf5 NSString\cf0  *personaname = [players \cf9 objectForKey\cf0 :\cf4 @"personaname"\cf0 ];\
            \cf5 NSString\cf0  *avatarLink = [players \cf9 objectForKey\cf0 :\cf4 @"avatarfull"\cf0 ];\
        \
            \cf2 //Applying to interface object\cf0 \
            \cf5 UIImage\cf0  *pImage=[\cf5 UIImage\cf0  \cf9 imageWithData\cf0 :[\cf5 NSData\cf0  \cf9 dataWithContentsOfURL\cf0 :[\cf5 NSURL\cf0  \cf9 URLWithString\cf0 :avatarLink]]];;\
            \cf5 NSData\cf0  *imageData = \cf9 UIImagePNGRepresentation\cf0 (pImage);\
            [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :imageData \cf9 forKey\cf0 :\cf4 @"playerImageData"\cf0 ];\
            [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :personaname \cf9 forKey\cf0 :\cf4 @"personaName"\cf0 ];\
        \} \cf6 @catch\cf0  (NSException *e) \{\
            \cf9 NSLog\cf0 (\cf4 @"Invalid index"\cf0 );\
        \}\
    \}\
    \cf6 if\cf0 ([connection \cf9 isEqual\cf0 :\cf8 heroNameConnection\cf0 ]) \{\
        [\cf8 heroNameData\cf0  \cf9 appendData\cf0 :data];\
        \
        \cf5 NSDictionary\cf0  *heroNamesDictionary= [\cf5 NSJSONSerialization\cf0  \cf9 JSONObjectWithData\cf0 :\cf8 heroNameData\cf0  \cf9 options\cf0 :\cf9 NSJSONReadingMutableLeaves\cf0  \cf9 error\cf0 :\cf6 nil\cf0 ];\
        \
        \cf5 NSArray\cf0  *result = [heroNamesDictionary \cf9 objectForKey\cf0 :\cf4 @"result"\cf0 ];\
        \
        \cf5 NSDictionary\cf0  *heroes = [result \cf9 objectForKey\cf0 :\cf4 @"heroes"\cf0 ];\
        \
        \cf5 NSString\cf0  *count = [result \cf9 valueForKey\cf0 :\cf4 @"count"\cf0 ];\
        \cf6 for\cf0  (\cf6 int\cf0  indV = \cf7 0\cf0 ; indV < [count \cf9 integerValue\cf0 ]; indV++) \{\
            \cf6 @try\cf0  \{\
                \cf5 NSString\cf0  *heroIDNumberString = [[heroes \cf9 valueForKey\cf0 :\cf4 @"id"\cf0 ] \cf9 objectAtIndex\cf0 :indV];\
                \cf5 NSString\cf0  *heroIDString = [[heroes \cf9 valueForKey\cf0 :\cf4 @"localized_name"\cf0 ] \cf9 objectAtIndex\cf0 :indV];\
                \cf5 NSString\cf0  *keyForHero = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"heroNameAtID%@"\cf0 , heroIDNumberString];\
                [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :heroIDString \cf9 forKey\cf0 :keyForHero];\
            \} \cf6 @catch\cf0  (NSException *e) \{\
                \cf9 NSLog\cf0 (\cf4 @"Invalid index"\cf0 );\
            \}\
        \}\
    \}\
    \cf6 if\cf0 ([connection \cf9 isEqual\cf0 :\cf8 connectionMatchHistory\cf0 ]) \{\
        [\cf8 matchHistoryData\cf0  \cf9 appendData\cf0 :data];\
        \
        \cf8 loadingProgress\cf0 .\cf5 progress\cf0  = \cf7 0\cf0 ;\
    \
        \cf5 NSDictionary\cf0  *matchCall = [\cf5 NSJSONSerialization\cf0  \cf9 JSONObjectWithData\cf0 :\cf8 matchHistoryData\cf0  \cf9 options\cf0 :\cf9 NSJSONReadingMutableLeaves\cf0  \cf9 error\cf0 :\cf6 nil\cf0 ];\
        \cf5 NSArray\cf0  *result = [matchCall \cf9 objectForKey\cf0 :\cf4 @"result"\cf0 ];\
        \cf5 NSDictionary\cf0  *matches = [result \cf9 objectForKey\cf0 :\cf4 @"matches"\cf0 ];\
        \
        \cf6 for\cf0  (\cf6 int\cf0  m = \cf7 0\cf0 ; m  < [matches \cf9 count\cf0 ]; m++) \{\
            \cf6 @try\cf0  \{\
                \cf5 NSString\cf0  *matchID = [[matches \cf9 valueForKey\cf0 :\cf4 @"match_id"\cf0 ] \cf9 objectAtIndex\cf0 :m];\
                \cf5 NSString\cf0  *startingDate = [[matches \cf9 valueForKey\cf0 :\cf4 @"start_time"\cf0 ] \cf9 objectAtIndex\cf0 :[matches \cf9 count\cf0 ] - \cf7 1\cf0 ];\
                \cf5 NSNumber\cf0  *matchIDInt = [\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :[matchID \cf9 integerValue\cf0 ]];\
                \cf6 if\cf0 (![\cf8 everyMatchEverPlayed\cf0  \cf9 containsObject\cf0 :matchIDInt]) \{\
                    [\cf8 totalWinsSave\cf0  \cf9 setInteger\cf0 :\cf7 0\cf0  \cf9 forKey\cf0 :\cf4 @"hasData"\cf0 ];\
                    [\cf8 everyMatchEverPlayed\cf0  \cf9 addObject\cf0 :matchIDInt];\
                    [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf8 everyMatchEverPlayed\cf0  \cf9 forKey\cf0 :\cf4 @"everyMatchEverPlayed"\cf0 ];\
                    \cf5 NSString\cf0  *matchDetails = [\cf5 NSString\cf0  \cf9 stringWithFormat\cf0 :\cf4 @"https://api.steampowered.com/IDOTA2Match_570/GetMatchDetails/V001/?key=D96F2969101F6440AD128D3E1F93EA91&match_id=%@"\cf0 ,matchID];\
                    \
                    \cf5 NSURLRequest\cf0  *request = [\cf5 NSURLRequest\cf0  \cf9 requestWithURL\cf0 :[\cf5 NSURL\cf0  \cf9 URLWithString\cf0 :matchDetails]\
                                                             \cf9 cachePolicy\cf0 :\cf9 NSURLRequestUseProtocolCachePolicy\cf0 \
                                                         \cf9 timeoutInterval\cf0 :\cf7 60.0\cf0 ];\
                    \
                    [\cf5 NSURLConnection\cf0  \cf9 sendAsynchronousRequest\cf0 :request \cf9 queue\cf0 :[\cf5 NSOperationQueue\cf0  \cf9 mainQueue\cf0 ] \cf9 completionHandler\cf0 :^(\cf5 NSURLResponse\cf0  *response, \cf5 NSData\cf0  *data, \cf5 NSError\cf0  *error)\
                    \{\
                    \cf6 if\cf0 (data != \cf6 nil\cf0 ) \{\
                        \cf6 float\cf0  divisor = [matches \cf9 count\cf0 ];\
                        \cf8 loadingProgress\cf0 .\cf5 progress\cf0  += \cf7 1\cf0 /divisor;\
                         \cf5 NSDictionary\cf0  *matchCall = [\cf5 NSJSONSerialization\cf0  \cf9 JSONObjectWithData\cf0 :data \cf9 options\cf0 :\cf9 NSJSONReadingMutableLeaves\cf0  \cf9 error\cf0 :\cf6 nil\cf0 ];\
                         \
                         \cf5 NSArray\cf0  *result = [matchCall \cf9 objectForKey\cf0 :\cf4 @"result"\cf0 ];\
                         \
                         \cf5 NSDictionary\cf0  *players = [result \cf9 valueForKey\cf0 :\cf4 @"players"\cf0 ];\
                         \cf5 NSString\cf0  *whoWon = [result \cf9 valueForKey\cf0 :\cf4 @"radiant_win"\cf0 ];\
                         \cf5 NSString\cf0  *startTime = [result \cf9 valueForKey\cf0 :\cf4 @"start_time"\cf0 ];\
                         \cf5 NSString\cf0  *gameMode = [result \cf9 valueForKey\cf0 :\cf4 @"game_mode"\cf0 ];\
                         \
                         \cf5 NSString\cf0  *localMatchID = [result \cf9 valueForKey\cf0 :\cf4 @"match_id"\cf0 ];\
                         \cf5 NSNumber\cf0  *localMatchIDInt = [\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :[localMatchID \cf9 integerValue\cf0 ]];\
                         \
                    \cf6 for\cf0  (\cf6 int\cf0  pl = \cf7 0\cf0 ; pl < [players \cf9 count\cf0 ]; pl++) \{\
                        \cf5 NSString\cf0  *accountIDString = [[players \cf9 valueForKey\cf0 :\cf4 @"account_id"\cf0 ] \cf9 objectAtIndex\cf0 :pl];\
                        \cf5 NSString\cf0  *leaverStatus = [[players \cf9 valueForKey\cf0 :\cf4 @"leaver_status"\cf0 ] \cf9 objectAtIndex\cf0 :pl];\
                        \cf6 if\cf0 ((\cf5 NSNull\cf0  *)accountIDString == [\cf5 NSNull\cf0  \cf9 null\cf0 ]) \{\
                            [\cf8 everyMatchEverPlayed\cf0  \cf9 removeObject\cf0 :matchIDInt];\
                            [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf8 everyMatchEverPlayed\cf0  \cf9 forKey\cf0 :\cf4 @"everyMatchEverPlayed"\cf0 ];\
                            gameMode = \cf4 @"10"\cf0 ;\
                        \}\
                        \cf6 if\cf0 ((\cf5 NSNull\cf0  *)leaverStatus != [\cf5 NSNull\cf0  \cf9 null\cf0 ]) \{\
                            \cf6 if\cf0 ([leaverStatus \cf9 integerValue\cf0 ] == \cf7 4\cf0 ) \{\
                                [\cf8 everyMatchEverPlayed\cf0  \cf9 removeObject\cf0 :matchIDInt];\
                                [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf8 everyMatchEverPlayed\cf0  \cf9 forKey\cf0 :\cf4 @"everyMatchEverPlayed"\cf0 ];\
                                gameMode = \cf4 @"10"\cf0 ;\
                            \}\
                        \}\
                    \}\
                    \cf6 if\cf0 ([gameMode \cf9 integerValue\cf0 ] == \cf7 7\cf0  || [gameMode \cf9 integerValue\cf0 ] == \cf7 9\cf0  || [gameMode \cf9 integerValue\cf0 ] == \cf7 10\cf0  || [gameMode \cf9 integerValue\cf0 ] == \cf7 15\cf0 ) \{\
                        [\cf8 everyMatchEverPlayed\cf0  \cf9 removeObject\cf0 :localMatchIDInt];\
                        [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf8 everyMatchEverPlayed\cf0  \cf9 forKey\cf0 :\cf4 @"everyMatchEverPlayed"\cf0 ];\
                    \}\
                    \cf6 if\cf0 ([result \cf9 count\cf0 ] == \cf7 0\cf0 ) \{\
                        [\cf8 everyMatchEverPlayed\cf0  \cf9 removeObject\cf0 :matchIDInt];\
                        [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf8 everyMatchEverPlayed\cf0  \cf9 forKey\cf0 :\cf4 @"everyMatchEverPlayed"\cf0 ];\
                    \}\
                    \cf6 if\cf0 ([gameMode \cf9 integerValue\cf0 ] != \cf7 7\cf0  && [gameMode \cf9 integerValue\cf0 ] != \cf7 9\cf0  && [gameMode \cf9 integerValue\cf0 ] != \cf7 10\cf0  && [gameMode \cf9 integerValue\cf0 ] != \cf7 15\cf0 ) \{\
                         \cf6 int\cf0  indVF;\
                         \cf6 for\cf0  (\cf6 int\cf0  indV = \cf7 0\cf0 ; indV < [players \cf9 count\cf0 ]; indV++) \{\
                             \cf5 NSString\cf0  *accountIDString = [[players \cf9 valueForKey\cf0 :\cf4 @"account_id"\cf0 ] \cf9 objectAtIndex\cf0 :indV];\
                             \cf6 if\cf0 ((\cf5 NSNull\cf0  *)accountIDString == [\cf5 NSNull\cf0  \cf9 null\cf0 ])\
                                 accountIDString = \cf4 @"0"\cf0 ;\
                             \cf6 if\cf0 ([accountIDString \cf9 integerValue\cf0 ] == (\cf6 int\cf0 )\cf8 steamUserAccountIDLocal\cf0 ) \{\
                                 indVF = indV;\
                             \}\
                         \}\
                         \cf2 //Find out who won\cf0 \
                         \cf6 bool\cf0  didWin = \cf6 FALSE\cf0 ;\
                         \cf5 NSString\cf0  *playerSlot = [[players \cf9 valueForKey\cf0 :\cf4 @"player_slot"\cf0 ] \cf9 objectAtIndex\cf0 :indVF];\
                         \cf5 NSString\cf0  *heroID = [[players \cf9 valueForKey\cf0 :\cf4 @"hero_id"\cf0 ] \cf9 objectAtIndex\cf0 :indVF];\
                         \cf5 NSString\cf0  *heroImageName = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@.png"\cf0 ,heroID];\
                         [\cf8 _heroImageOne\cf0  \cf9 setImage\cf0 :[\cf5 UIImage\cf0  \cf9 imageNamed\cf0 :heroImageName]];\
                        \
                         \cf2 //Hero bundle\cf0 \
                         \cf5 NSString\cf0  *heroBundleString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"heroBundle:%@"\cf0 , heroID];\
                         \cf5 NSMutableDictionary\cf0  *heroBundle = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :heroBundleString]];\
                         \
                         \cf6 int\cf0  kill = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"kill"\cf0 ] \cf9 integerValue\cf0 ];\
                         \cf5 NSString\cf0  *killString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@"\cf0 , [[players \cf9 valueForKey\cf0 :\cf4 @"kills"\cf0 ] \cf9 objectAtIndex\cf0 :indVF]];\
                         kill = kill + [killString \cf9 integerValue\cf0 ];\
                         [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :kill] \cf9 forKey\cf0 :\cf4 @"kill"\cf0 ];\
                         \
                         \cf6 int\cf0  death = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"death"\cf0 ] \cf9 integerValue\cf0 ];\
                         \cf5 NSString\cf0  *deathString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@"\cf0 , [[players \cf9 valueForKey\cf0 :\cf4 @"deaths"\cf0 ] \cf9 objectAtIndex\cf0 :indVF]];\
                         death = death + [deathString \cf9 integerValue\cf0 ];\
                         [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :death] \cf9 forKey\cf0 :\cf4 @"death"\cf0 ];\
                         \
                         \cf6 int\cf0  assist = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"assist"\cf0 ] \cf9 integerValue\cf0 ];\
                         \cf5 NSString\cf0  *assistString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@"\cf0 , [[players \cf9 valueForKey\cf0 :\cf4 @"assists"\cf0 ] \cf9 objectAtIndex\cf0 :indVF]];\
                         assist = assist + [assistString \cf9 integerValue\cf0 ];\
                         [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :assist] \cf9 forKey\cf0 :\cf4 @"assist"\cf0 ];\
                         \
                         \cf6 int\cf0  gpm = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"gpm"\cf0 ] \cf9 integerValue\cf0 ];\
                         \cf5 NSString\cf0  *gpmString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@"\cf0 , [[players \cf9 valueForKey\cf0 :\cf4 @"gold_per_min"\cf0 ] \cf9 objectAtIndex\cf0 :indVF]];\
                         gpm = gpm + [gpmString \cf9 integerValue\cf0 ];\
                         [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :gpm] \cf9 forKey\cf0 :\cf4 @"gpm"\cf0 ];\
                         \
                         \cf6 int\cf0  xpm = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"xpm"\cf0 ] \cf9 integerValue\cf0 ];\
                         \cf5 NSString\cf0  *xpmString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@"\cf0 , [[players \cf9 valueForKey\cf0 :\cf4 @"xp_per_min"\cf0 ] \cf9 objectAtIndex\cf0 :indVF]];\
                         xpm = xpm + [xpmString \cf9 integerValue\cf0 ];\
                         [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :xpm] \cf9 forKey\cf0 :\cf4 @"xpm"\cf0 ];\
                         \
                         \cf6 int\cf0  lh = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"lh"\cf0 ] \cf9 integerValue\cf0 ];\
                         \cf5 NSString\cf0  *lhString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@"\cf0 , [[players \cf9 valueForKey\cf0 :\cf4 @"last_hits"\cf0 ] \cf9 objectAtIndex\cf0 :indVF]];\
                         lh = lh + [lhString \cf9 integerValue\cf0 ];\
                         [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :lh] \cf9 forKey\cf0 :\cf4 @"lh"\cf0 ];\
                         \
                         \cf6 int\cf0  dn = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"dn"\cf0 ] \cf9 integerValue\cf0 ];\
                         \cf5 NSString\cf0  *dnString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@"\cf0 , [[players \cf9 valueForKey\cf0 :\cf4 @"denies"\cf0 ] \cf9 objectAtIndex\cf0 :indVF]];\
                         dn = dn + [dnString \cf9 integerValue\cf0 ];\
                         [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :dn] \cf9 forKey\cf0 :\cf4 @"dn"\cf0 ];\
                         \
                         \cf6 int\cf0  goldSpent = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"goldSpent"\cf0 ] \cf9 integerValue\cf0 ];\
                         \cf5 NSString\cf0  *goldSpentString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@"\cf0 , [[players \cf9 valueForKey\cf0 :\cf4 @"gold_spent"\cf0 ] \cf9 objectAtIndex\cf0 :indVF]];\
                         goldSpent = goldSpent + [goldSpentString \cf9 integerValue\cf0 ];\
                         [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :goldSpent] \cf9 forKey\cf0 :\cf4 @"goldSpent"\cf0 ];\
                         \
                         \cf6 int\cf0  heroDamage = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"heroDamage"\cf0 ] \cf9 integerValue\cf0 ];\
                         \cf5 NSString\cf0  *heroDamageString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%@"\cf0 , [[players \cf9 valueForKey\cf0 :\cf4 @"hero_damage"\cf0 ] \cf9 objectAtIndex\cf0 :indVF]];\
                         heroDamage = heroDamage + [heroDamageString \cf9 integerValue\cf0 ];\
                         [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :heroDamage] \cf9 forKey\cf0 :\cf4 @"heroDamage"\cf0 ];\
                         \
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :heroBundle \cf9 forKey\cf0 :heroBundleString];\
                         \
    \cf2 //NEW                //For Records\cf0 \
                         \cf5 NSMutableDictionary\cf0  *recordGPMDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordGPMDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordGPMString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [gpmString \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordGPMDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordGPMString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordGPMDictionary \cf9 forKey\cf0 :\cf4 @"recordGPMDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordXPMDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordXPMDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordXPMString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [xpmString \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordXPMDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordXPMString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordXPMDictionary \cf9 forKey\cf0 :\cf4 @"recordXPMDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordLHDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordLHDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordLHString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [lhString \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordLHDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordLHString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordLHDictionary \cf9 forKey\cf0 :\cf4 @"recordLHDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordDNDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordDNDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordDNString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [dnString \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordDNDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordDNString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordDNDictionary \cf9 forKey\cf0 :\cf4 @"recordDNDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordKillDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordKillDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordKillString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [killString \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordKillDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordKillString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordKillDictionary \cf9 forKey\cf0 :\cf4 @"recordKillDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordDeathDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordDeathDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordDeathString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [deathString \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordDeathDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordDeathString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordDeathDictionary \cf9 forKey\cf0 :\cf4 @"recordDeathDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordAssistDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordAssistDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordAssistString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [assistString \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordAssistDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordAssistString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordAssistDictionary \cf9 forKey\cf0 :\cf4 @"recordAssistDictionary"\cf0 ];\
    \cf2 //\cf0 \
                         \cf5 NSMutableDictionary\cf0  *recordGoldSpentDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordGoldSpentDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordGoldSpentString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [goldSpentString \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordGoldSpentDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordGoldSpentString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordGoldSpentDictionary \cf9 forKey\cf0 :\cf4 @"recordGoldSpentDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordHeroDamageDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordHeroDamageDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordHeroDamageString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [heroDamageString \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordHeroDamageDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordHeroDamageString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordHeroDamageDictionary \cf9 forKey\cf0 :\cf4 @"recordHeroDamageDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordTowerDamageDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordTowerDamageDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordTowerDamageString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [[[players \cf9 valueForKey\cf0 :\cf4 @"tower_damage"\cf0 ] \cf9 objectAtIndex\cf0 :indVF] \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordTowerDamageDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordTowerDamageString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordTowerDamageDictionary \cf9 forKey\cf0 :\cf4 @"recordTowerDamageDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordHeroHealingDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordHeroHealingDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordHeroHealingString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [[[players \cf9 valueForKey\cf0 :\cf4 @"hero_healing"\cf0 ] \cf9 objectAtIndex\cf0 :indVF] \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordHeroHealingDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordHeroHealingString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordHeroHealingDictionary \cf9 forKey\cf0 :\cf4 @"recordHeroHealingDictionary"\cf0 ];\
                         \
                         \cf5 NSMutableDictionary\cf0  *recordMatchDurationDictionary = [[\cf5 NSMutableDictionary\cf0  \cf9 alloc\cf0 ] \cf9 initWithDictionary\cf0 :[\cf8 totalWinsSave\cf0  \cf9 dictionaryForKey\cf0 :\cf4 @"recordMatchDurationDictionary"\cf0 ]];\
                         \cf5 NSString\cf0  *recordMatchDurationString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"%f"\cf0 , [[result \cf9 valueForKey\cf0 :\cf4 @"duration"\cf0 ] \cf9 floatValue\cf0 ]/\cf7 10000\cf0 ];\
                         [recordMatchDurationDictionary \cf9 setObject\cf0 :matchID \cf9 forKey\cf0 :recordMatchDurationString];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :recordMatchDurationDictionary \cf9 forKey\cf0 :\cf4 @"recordMatchDurationDictionary"\cf0 ];\
    \cf2 //END\cf0 \
                         \cf2 //Saving Match Information\cf0 \
                         \cf5 NSString\cf0  *heroPlayedKey = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"heroPlayed:%@"\cf0 , matchID];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :heroID \cf9 forKey\cf0 :heroPlayedKey];\
                         \cf5 NSString\cf0  *gpmKey = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"gpmAtID:%@"\cf0 , matchID];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :gpmString \cf9 forKey\cf0 :gpmKey];\
                         \cf5 NSString\cf0  *xpmKey = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"xpmAtID:%@"\cf0 , matchID];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :gpmString \cf9 forKey\cf0 :xpmKey];\
                         \cf5 NSString\cf0  *lhKey = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"lhAtID:%@"\cf0 , matchID];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :lhString \cf9 forKey\cf0 :lhKey];\
                         \cf5 NSString\cf0  *dnKey = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"dnAtID:%@"\cf0 , matchID];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :dnString \cf9 forKey\cf0 :dnKey];\
                         \cf5 NSString\cf0  *gsKey = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"gsAtID:%@"\cf0 , matchID];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :goldSpentString \cf9 forKey\cf0 :gsKey];\
                         \cf5 NSString\cf0  *hdKey = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"hdAtID:%@"\cf0 , matchID];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :heroDamageString \cf9 forKey\cf0 :hdKey];\
                         \
                         \cf2 //Set hero play count\cf0 \
                         \cf5 NSString\cf0  *heroAPlayCountString = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"hero%i"\cf0 , [heroID \cf9 integerValue\cf0 ]];\
                         \cf6 int\cf0  playCount = [\cf8 totalWinsSave\cf0  \cf9 integerForKey\cf0 :heroAPlayCountString];\
                         playCount++;\
                         [\cf8 totalWinsSave\cf0  \cf9 setInteger\cf0 :playCount \cf9 forKey\cf0 :heroAPlayCountString];\
                         \
                         \cf2 //Saving if you won or lost for match history\cf0 \
                         \cf5 NSString\cf0  *whoWonKey = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"whoWon:%@"\cf0 , matchID];\
                         \
                         \cf2 //Saving Date\cf0 \
                         \cf5 NSString\cf0  *dateKey = [[\cf5 NSString\cf0  \cf9 alloc\cf0 ] \cf9 initWithFormat\cf0 :\cf4 @"date:%@"\cf0 , matchID];\
                         [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :startTime \cf9 forKey\cf0 :dateKey];\
                         \cf6 if\cf0 ([whoWon \cf9 integerValue\cf0 ] == \cf7 0\cf0 ) \{\
                             \cf6 if\cf0 ([playerSlot \cf9 integerValue\cf0 ] < \cf7 10\cf0 ) \{\
                                 \cf8 totalLoss\cf0 ++;\
                                 \cf2 //Hero bundle continued\cf0 \
                                 \cf6 int\cf0  loss = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"loss"\cf0 ] \cf9 integerValue\cf0 ];\
                                 loss++;\
                                 [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :loss] \cf9 forKey\cf0 :\cf4 @"loss"\cf0 ];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :heroBundle \cf9 forKey\cf0 :heroBundleString];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf4 @"LOSS"\cf0  \cf9 forKey\cf0 :whoWonKey];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setInteger\cf0 :\cf8 totalLoss\cf0  \cf9 forKey\cf0 :\cf4 @"totalLoss"\cf0 ];\
                                 didWin = \cf6 FALSE\cf0 ;\
                             \}\
                             \cf6 else\cf0  \{\
                                 \cf8 totalWin\cf0 ++;\
                                 \cf2 //Hero bundle continued\cf0 \
                                 \cf6 int\cf0  win = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"win"\cf0 ] \cf9 integerValue\cf0 ];\
                                 win++;\
                                 [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :win] \cf9 forKey\cf0 :\cf4 @"win"\cf0 ];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :heroBundle \cf9 forKey\cf0 :heroBundleString];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf4 @"WIN"\cf0  \cf9 forKey\cf0 :whoWonKey];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setInteger\cf0 :\cf8 totalWin\cf0  \cf9 forKey\cf0 :\cf4 @"totalWin"\cf0 ];\
                                 didWin = \cf6 TRUE\cf0 ;\
                             \}\
                         \}\
                         \cf6 else\cf0  \{\
                             \cf6 if\cf0 ([playerSlot \cf9 integerValue\cf0 ] > \cf7 10\cf0 ) \{\
                                 \cf8 totalLoss\cf0 ++;\
                                 \cf2 //Hero bundle continued\cf0 \
                                 \cf6 int\cf0  loss = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"loss"\cf0 ] \cf9 integerValue\cf0 ];\
                                 loss++;\
                                 [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :loss] \cf9 forKey\cf0 :\cf4 @"loss"\cf0 ];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :heroBundle \cf9 forKey\cf0 :heroBundleString];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf4 @"LOSS"\cf0  \cf9 forKey\cf0 :whoWonKey];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setInteger\cf0 :\cf8 totalLoss\cf0  \cf9 forKey\cf0 :\cf4 @"totalLoss"\cf0 ];\
                                 didWin = \cf6 FALSE\cf0 ;\
                             \}\
                             \cf6 else\cf0  \{\
                                 \cf8 totalWin\cf0 ++;\
                                 \cf2 //Hero bundle continued\cf0 \
                                 \cf6 int\cf0  win = [[heroBundle \cf9 objectForKey\cf0 :\cf4 @"win"\cf0 ] \cf9 integerValue\cf0 ];\
                                 win++;\
                                 [heroBundle \cf9 setObject\cf0 :[\cf5 NSNumber\cf0  \cf9 numberWithInt\cf0 :win] \cf9 forKey\cf0 :\cf4 @"win"\cf0 ];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :heroBundle \cf9 forKey\cf0 :heroBundleString];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setObject\cf0 :\cf4 @"WIN"\cf0  \cf9 forKey\cf0 :whoWonKey];\
                                 [\cf8 totalWinsSave\cf0  \cf9 setInteger\cf0 :\cf8 totalWin\cf0  \cf9 forKey\cf0 :\cf4 @"totalWin"\cf0 ];\
                                 didWin = \cf6 TRUE\cf0 ;\
                             \}\
                         \}\
                    \}\
                    \}\
                     \}];\
                \}\
                \cf6 if\cf0 (m == [matches \cf9 count\cf0 ] - \cf7 1\cf0 ) \{\
                    \cf6 if\cf0 (\cf8 lastMatchID\cf0  == [matchID \cf9 integerValue\cf0 ]) \{\
                        [\cf8 totalWinsSave\cf0  \cf9 setInteger\cf0 :\cf7 1\cf0  \cf9 forKey\cf0 :\cf4 @"hasData"\cf0 ];\
                        \cf2 //Logout\cf0 \
                        \cf5 NSString\cf0  *steamString = \cf4 @"{\field{\*\fldinst{HYPERLINK "http://steamcommunity.com/login/logout"}}{\fldrslt http://steamcommunity.com/login/logout}}"\cf0 ;\
                        \cf5 NSURL\cf0  *steamURL = [\cf5 NSURL\cf0  \cf9 URLWithString\cf0 :steamString];\
                        \cf5 NSURLRequest\cf0  *steamRequest = [\cf5 NSURLRequest\cf0  \cf9 requestWithURL\cf0 :steamURL];\
                        [\cf8 _webView\cf0  \cf9 loadRequest\cf0 :steamRequest];\
                        \
                        [\cf6 self\cf0  \cf9 dismissViewControllerAnimated\cf0 :\cf6 YES\cf0  \cf9 completion\cf0 :\cf6 nil\cf0 ];\
                    \}\
                    \cf6 if\cf0 (\cf8 lastMatchID\cf0  != [matchID \cf9 integerValue\cf0 ]) \{\
                        \cf8 gameHistory\cf0  = [\cf5 NSString\cf0  \cf9 stringWithFormat\cf0 :\cf4 @"https://api.steampowered.com/IDOTA2Match_570/GetMatchHistory/V001/?key=D96F2969101F6440AD128D3E1F93EA91&account_id=%i&date_max=%@"\cf0 ,\cf8 accountIDInt\cf0 , startingDate];\
                        \cf8 lastMatchID\cf0  = [matchID \cf9 integerValue\cf0 ];\
                        [\cf6 self\cf0  \cf10 collectMatches\cf0 ];\
                    \}\
                \}\
            \} \cf6 @catch\cf0  (NSException *e) \{\
                \cf9 NSLog\cf0 (\cf4 @"Invalid index"\cf0 );\
            \}\
        \}\
    \}\
\}}
